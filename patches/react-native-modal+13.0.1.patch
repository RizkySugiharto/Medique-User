diff --git a/node_modules/react-native-modal/dist/modal.d.ts b/node_modules/react-native-modal/dist/modal.d.ts
index b63bcfc..1fa71a4 100644
--- a/node_modules/react-native-modal/dist/modal.d.ts
+++ b/node_modules/react-native-modal/dist/modal.d.ts
@@ -47,6 +47,7 @@ declare const defaultProps: {
     scrollHorizontal: boolean;
     statusBarTranslucent: boolean;
     supportedOrientations: ("landscape" | "portrait" | "portrait-upside-down" | "landscape-left" | "landscape-right")[];
+    containerMarginMultiplier: number;
 };
 export declare type ModalProps = ViewProps & {
     children: React.ReactNode;
@@ -104,6 +105,7 @@ export declare class ReactNativeModal extends React.Component<ModalProps, State>
         scrollOffsetMax: PropTypes.Requireable<number>;
         scrollHorizontal: PropTypes.Requireable<boolean>;
         supportedOrientations: PropTypes.Requireable<(string | null | undefined)[]>;
+        containerMarginMultiplier: PropTypes.Requireable<number>;
     };
     static defaultProps: {
         animationIn: "bounce" | "flash" | "jello" | "pulse" | "rotate" | "rubberBand" | "shake" | "swing" | "tada" | "wobble" | "bounceIn" | "bounceInDown" | "bounceInUp" | "bounceInLeft" | "bounceInRight" | "bounceOut" | "bounceOutDown" | "bounceOutUp" | "bounceOutLeft" | "bounceOutRight" | "fadeIn" | "fadeInDown" | "fadeInDownBig" | "fadeInUp" | "fadeInUpBig" | "fadeInLeft" | "fadeInLeftBig" | "fadeInRight" | "fadeInRightBig" | "fadeOut" | "fadeOutDown" | "fadeOutDownBig" | "fadeOutUp" | "fadeOutUpBig" | "fadeOutLeft" | "fadeOutLeftBig" | "fadeOutRight" | "fadeOutRightBig" | "flipInX" | "flipInY" | "flipOutX" | "flipOutY" | "lightSpeedIn" | "lightSpeedOut" | "slideInDown" | "slideInUp" | "slideInLeft" | "slideInRight" | "slideOutDown" | "slideOutUp" | "slideOutLeft" | "slideOutRight" | "zoomIn" | "zoomInDown" | "zoomInUp" | "zoomInLeft" | "zoomInRight" | "zoomOut" | "zoomOutDown" | "zoomOutUp" | "zoomOutLeft" | "zoomOutRight" | animatable.CustomAnimation<import("react-native").TextStyle & ViewStyle & import("react-native").ImageStyle>;
@@ -138,6 +140,7 @@ export declare class ReactNativeModal extends React.Component<ModalProps, State>
         scrollHorizontal: boolean;
         statusBarTranslucent: boolean;
         supportedOrientations: ("landscape" | "portrait" | "portrait-upside-down" | "landscape-left" | "landscape-right")[];
+        containerMarginMultiplier: number;
     };
     state: State;
     isTransitioning: boolean;
diff --git a/node_modules/react-native-modal/dist/modal.js b/node_modules/react-native-modal/dist/modal.js
index 80f4e75..a5af395 100644
--- a/node_modules/react-native-modal/dist/modal.js
+++ b/node_modules/react-native-modal/dist/modal.js
@@ -39,6 +39,7 @@ const defaultProps = {
     scrollHorizontal: false,
     statusBarTranslucent: false,
     supportedOrientations: ['portrait', 'landscape'],
+    containerMarginMultiplier: 0.05,
 };
 const extractAnimationFromProps = (props) => ({
     animationIn: props.animationIn,
@@ -490,10 +491,10 @@ export class ReactNativeModal extends React.Component {
     }
     render() {
         /* eslint-disable @typescript-eslint/no-unused-vars */
-        const { animationIn, animationInTiming, animationOut, animationOutTiming, avoidKeyboard, coverScreen, hasBackdrop, backdropColor, backdropOpacity, backdropTransitionInTiming, backdropTransitionOutTiming, customBackdrop, children, isVisible, onModalShow, onBackButtonPress, useNativeDriver, propagateSwipe, style, ...otherProps } = this.props;
+        const { animationIn, animationInTiming, animationOut, animationOutTiming, avoidKeyboard, coverScreen, hasBackdrop, backdropColor, backdropOpacity, backdropTransitionInTiming, backdropTransitionOutTiming, customBackdrop, children, isVisible, onModalShow, onBackButtonPress, useNativeDriver, propagateSwipe, style, containerMarginMultiplier, ...otherProps } = this.props;
         const { testID, ...containerProps } = otherProps;
         const computedStyle = [
-            { margin: this.getDeviceWidth() * 0.05, transform: [{ translateY: 0 }] },
+            { margin: this.getDeviceWidth() * (containerMarginMultiplier !== undefined ? containerMarginMultiplier : 0.05), transform: [{ translateY: 0 }] },
             styles.content,
             style,
         ];
@@ -577,6 +578,7 @@ ReactNativeModal.propTypes = {
         'landscape-left',
         'landscape-right',
     ])),
+    containerMarginMultiplier: PropTypes.number,
 };
 ReactNativeModal.defaultProps = defaultProps;
 export default ReactNativeModal;
